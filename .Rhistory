getwd()
?write.csv
name = "assignment_BADS_WS1617_class.csv"
name
data = read.csv(name, header=T,sep=";")
data
data = read.csv(name, header=T,sep=",")
data
for(header in list(data$title,data$newsletter,data$coupon,data$giftwrapping,data$referrer,data$cost_shipping))
{
header = factor(header, labels=c("no","yes"))
}
data
data()
data = read.csv(name, header=T,sep=",")
class(data$title)
class(data$newsletter)
for(header in list(data$title,data$newsletter,data$coupon,data$giftwrapping,data$referrer,data$cost_shipping))
{
header = factor(header, labels=c("no","yes"))
}
class(data$title)
list(data$title,data$newsletter,data$coupon,data$giftwrapping,data$referrer,data$cost_shipping)
class(data$newsletter)
summary(data$newsletter)
data$newsletter = factor(data$newsletter, labels=c("no","yes"))
summary(data$newsletter)
class(data$newsletter)
?apply
data = read.csv(name, header=T,sep=",")
class(data$newsletter)
class(data)
temp = data
?sapply
data["title"]
data[0]
data["newsletter"]
class(data)
class(data$newsletter)
for(header in list("title","newsletter","coupon","giftwrapping","referrer","cost_shipping"))
{
data[header] = factor(data[header], labels=c("no","yes")))
}
for(header in list("title","newsletter","coupon","giftwrapping","referrer","cost_shipping"))
{
data[header] = factor(data[header], labels=c("no","yes"))
}
class(data$newsletter)
data["newsletter"] = factor(data["newsletter"], labels=c("no","yes")))
data["newsletter"] = factor(data["newsletter"], labels=c("no","yes"))
data["newsletter"] = as.factor(data["newsletter"], labels=c("no","yes"))
?as.factor()
?factor
class(data$newsletter)
apply(data$newsletter,2,factor(x, labels=c("no","yes")))
apply(data$newsletter,2,factor(newsletter, labels=c("no","yes")))
apply(data,2,factor(newsletter, labels=c("no","yes")))
factorise = function(col){factor(col, labels=c("no","yes"))}
factorise(data$newsletter)
class(data$newsletter)
data$newsletter = factorise(data$newsletter)
class(data$newsletter)
for(header in list(data$title,data$newsletter,data$coupon,data$giftwrapping,data$referrer,data$cost_shipping))
{
factorise(header)
}
class(data$title)
class(data$title)
for(header in list(data$title,data$newsletter,data$coupon,data$giftwrapping,data$referrer,data$cost_shipping))
{
header = factorise(header)
}
class(data$title)
lapply(list(data$title,data$newsletter,data$coupon,data$giftwrapping,data$referrer,data$cost_shipping),factorise)
list(data$title,data$newsletter,data$coupon,data$giftwrapping,data$referrer,data$cost_shipping) = lapply(list(data$title,data$newsletter,data$coupon,data$giftwrapping,data$referrer,data$cost_shipping),factorise)
factorise = function(col){factor(col, labels=c("no","yes"))}
list(data$title,data$newsletter,data$coupon,data$giftwrapping,data$referrer,data$cost_shipping) = lapply(list(data$title,data$newsletter,data$coupon,data$giftwrapping,data$referrer,data$cost_shipping),factorise)
list(data$title,data$newsletter,data$coupon,data$giftwrapping,data$referrer,data$cost_shipping) = lapply(list(data$title,data$newsletter,data$coupon,data$giftwrapping,data$referrer,data$cost_shipping),factorise())
for(header in c(data$title,data$newsletter,data$coupon,data$giftwrapping,data$referrer,data$cost_shipping))
{
header = factorise(header)
}
name
data = read.csv(name, header=T,sep=",")
factorise = function(col){factor(col, labels=c("no","yes"))}
for(header in c(data$title,data$newsletter,data$coupon,data$giftwrapping,data$referrer,data$cost_shipping))
{
header = factorise(header)
}
c(data$title,data$newsletter,data$coupon,data$giftwrapping,data$referrer,data$cost_shipping)
c("title","newsletter","coupon","giftwrapping","referrer","cost_shipping")
class(data["title"])
class data$title
class(data$title)
class(data["title"])
class(data$title)
class(data[,"title"])
data["title"]
for(header in c("title","newsletter","coupon","giftwrapping","referrer","cost_shipping"))
{
data[,header] = lapply(data[,header],factorise)
}
data[,c("title","newsletter","coupon","giftwrapping","referrer","cost_shipping")] = lapply(data[,c("title","newsletter","coupon","giftwrapping","referrer","cost_shipping")],factorise)
class(data$title)
class(data$giftwrapping)
summary(data$giftwrapping)
data = read.csv(name, header=T,sep=",")
for(header in c("title","newsletter","coupon","giftwrapping","referrer","cost_shipping"))
{
data[,header] = factorise(data[,header])
}
data = read.csv(name, header=T,sep=",")
class(data$giftwrapping)
for(header in c("title","newsletter","coupon","giftwrapping","referrer","cost_shipping"))
{
data[,header] = factorise(data[,header])
}
class(data$giftwrapping)
for(header in colnames(data)){summary(data[,header])}
colnames(data)
for(header in colnames(data)){summary(data[,header])}
summary(data[,"title"])
for(header in colnames(data)){summary(data[,header])}
for(header in colnames(data)){header}
for(header in colnames(data))header
temp =   for(header in colnames(data)){summary(data[,header])}
temp
for(header in colnames(data))
{
print(header)
summary(data[,header])
}
lapply(data,summary)
summary(data$ID)
class(data$ID)
data$ID = factor(data$ID)
class(data$ID)
summary(data$ID)
summary(data$order_date)
class(data$order_date)
colnames(data)
lapply(data,class)
known = get_dataset
source("helper.R")
known = get_dataset(name)
lapply(data,class)
lapply(data,summary)
known = get_dataset(name)
source("helper.R")
known = get_dataset(name)
lapply(data,summary)
class(data$model)
lapply(known,summary)
lapply(known,class)
source("helper.R")
known = get_dataset("assignment_BADS_WS1617_class.csv")
lapply(known,class)
lapply(known,summary)
source("helper.R")
known = get_dataset("assignment_BADS_WS1617_class.csv")
lapply(known,class)
lapply(known,summary)
source("helper.R")
known = get_dataset("assignment_BADS_WS1617_class.csv")
lapply(known,class)
lapply(known,summary)
source("helper.R")
known = get_dataset("assignment_BADS_WS1617_known.csv")
lapply(known,class)
lapply(known,summary)
source("helper.R")
known = get_dataset("assignment_BADS_WS1617_known.csv")
class = get_dataset("assignment_BADS_WS1617_class.csv")
lapply(known,class)
lapply(known,summary)
View(known)
source("helper.R")
known = get_dataset("assignment_BADS_WS1617_known.csv")
class = get_dataset("assignment_BADS_WS1617_class.csv")
lapply(known,class)
lapply(known,summary)
lapply(class,summary)
for(item in known$postcode_invoice)
{
print(item)
}
for(postcode_known in known$postcode_invoice)
{
if(postcode_known %in% class$postcode_invoice)
{
print(postcode_known)
}
}
for(postcode_known in known$postcode_invoice)
{
if(not postcode_known %in% class$postcode_invoice)
{
print(postcode_known)
}
}
for(postcode_known in known$postcode_invoice)
{
if!(postcode_known %in% class$postcode_invoice)
{
print(postcode_known)
}
}
for(postcode_known in known$postcode_invoice)
{
if(!(postcode_known %in% class$postcode_invoice))
{
print(postcode_known)
}
}
?setdiff
setdiff(known$postcode_invoice,class$postcode_invoice)
# This is the main script that runs all the other modules
#######################
# Load modules
source("helper.R")
#######################
# Load data
# known - training data
known = get_dataset("assignment_BADS_WS1617_known.csv")
# class - data to be classified
class = get_dataset("assignment_BADS_WS1617_class.csv")
#######################
# check plausability of data types
# lapply(known,class)
# summarise
lapply(known,summary)
lapply(class,summary)
# This is the main script that runs all the other modules
#######################
# Load modules
source("helper.R")
#######################
# Load data
# known - training data
known = get_dataset("assignment_BADS_WS1617_known.csv")
# class - data to be classified
class = get_dataset("assignment_BADS_WS1617_class.csv")
#######################
# check plausability of data types
# lapply(known,class)
# summarise
lapply(known,summary)
lapply(class,summary)
class(known$postcode_invoice)
# This is the main script that runs all the other modules
#######################
# Load modules
source("helper.R")
#######################
# Load data
# known - training data
known = get_dataset("assignment_BADS_WS1617_known.csv")
# class - data to be classified
class = get_dataset("assignment_BADS_WS1617_class.csv")
#######################
# check plausability of data types
# lapply(known,class)
# summarise
lapply(known,summary)
lapply(class,summary)
class(known$postcode_invoice)
summary(known$postcode_invoice)
known$postcode_invoice
setdiff(known$postcode_invoice,class$postcode_invoice)
"??" %in% class$postcode_delivery
"??" %in% class$postcode_invoice
"??" %in% known$postcode_invoice
intersect(known$postcode_invoice,class$postcode_invoice)
union(known$postcode_invoice,class$postcode_invoice)
known$postcode_invoice %in% class$postcode_invoice
setdiff(known$postcode_invoice,class$postcode_invoice)
setdiff(class$postcode_invoice,known$postcode_invoice)
