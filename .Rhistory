known = get_dataset("assignment_BADS_WS1617_known.csv")
lapply(known,class)
lapply(known,summary)
source("helper.R")
known = get_dataset("assignment_BADS_WS1617_known.csv")
class = get_dataset("assignment_BADS_WS1617_class.csv")
lapply(known,class)
lapply(known,summary)
View(known)
source("helper.R")
known = get_dataset("assignment_BADS_WS1617_known.csv")
class = get_dataset("assignment_BADS_WS1617_class.csv")
lapply(known,class)
lapply(known,summary)
lapply(class,summary)
for(item in known$postcode_invoice)
{
print(item)
}
for(postcode_known in known$postcode_invoice)
{
if(postcode_known %in% class$postcode_invoice)
{
print(postcode_known)
}
}
for(postcode_known in known$postcode_invoice)
{
if(not postcode_known %in% class$postcode_invoice)
{
print(postcode_known)
}
}
for(postcode_known in known$postcode_invoice)
{
if!(postcode_known %in% class$postcode_invoice)
{
print(postcode_known)
}
}
for(postcode_known in known$postcode_invoice)
{
if(!(postcode_known %in% class$postcode_invoice))
{
print(postcode_known)
}
}
?setdiff
setdiff(known$postcode_invoice,class$postcode_invoice)
# This is the main script that runs all the other modules
#######################
# Load modules
source("helper.R")
#######################
# Load data
# known - training data
known = get_dataset("assignment_BADS_WS1617_known.csv")
# class - data to be classified
class = get_dataset("assignment_BADS_WS1617_class.csv")
#######################
# check plausability of data types
# lapply(known,class)
# summarise
lapply(known,summary)
lapply(class,summary)
# This is the main script that runs all the other modules
#######################
# Load modules
source("helper.R")
#######################
# Load data
# known - training data
known = get_dataset("assignment_BADS_WS1617_known.csv")
# class - data to be classified
class = get_dataset("assignment_BADS_WS1617_class.csv")
#######################
# check plausability of data types
# lapply(known,class)
# summarise
lapply(known,summary)
lapply(class,summary)
class(known$postcode_invoice)
# This is the main script that runs all the other modules
#######################
# Load modules
source("helper.R")
#######################
# Load data
# known - training data
known = get_dataset("assignment_BADS_WS1617_known.csv")
# class - data to be classified
class = get_dataset("assignment_BADS_WS1617_class.csv")
#######################
# check plausability of data types
# lapply(known,class)
# summarise
lapply(known,summary)
lapply(class,summary)
class(known$postcode_invoice)
summary(known$postcode_invoice)
known$postcode_invoice
setdiff(known$postcode_invoice,class$postcode_invoice)
"??" %in% class$postcode_delivery
"??" %in% class$postcode_invoice
"??" %in% known$postcode_invoice
intersect(known$postcode_invoice,class$postcode_invoice)
union(known$postcode_invoice,class$postcode_invoice)
known$postcode_invoice %in% class$postcode_invoice
setdiff(known$postcode_invoice,class$postcode_invoice)
setdiff(class$postcode_invoice,known$postcode_invoice)
getwd()
# This is the main script that runs all the other modules
#######################
# Load modules
source("helper.R")
#######################
# Load data
# known - training data
known = get_dataset("assignment_BADS_WS1617_known.csv")
# class - data to be classified
class = get_dataset("assignment_BADS_WS1617_class.csv")
#######################
# check plausability of data types
# lapply(known,class)
# summarise
lapply(known,summary)
lapply(class,summary)
setdiff(known$postcode_invoice,class$postcode_invoice)
setdiff(class$postcode_invoice,known$postcode_invoice)
class(known$postcode_invoice)
"04" %in% class$postcode_invoice
# This is the main script that runs all the other modules
#######################
# Load modules
source("helper.R")
#######################
# Load data
# known - training data
known = get_dataset("assignment_BADS_WS1617_known.csv")
# class - data to be classified
class = get_dataset("assignment_BADS_WS1617_class.csv")
#######################
# check plausability of data types
# lapply(known,class)
# summarise
lapply(known,summary)
lapply(class,summary)
# This is the main script that runs all the other modules
#######################
# Load modules
source("helper.R")
#######################
# Load data
# known - training data
known = get_dataset("assignment_BADS_WS1617_known.csv")
# class - data to be classified
class = get_dataset("assignment_BADS_WS1617_class.csv")
#######################
# check plausability of data types
# lapply(known,class)
# summarise
lapply(known,summary)
lapply(class,summary)
"04" %in% class$postcode_invoice
class(known$postcode_invoice)
setdiff(class$postcode_invoice,known$postcode_invoice)
setdiff(known$postcode_invoice,class$postcode_invoice)
lapply(class$postcode_invoice, print)
lapply(class$postcode_invoice, print)
lapply(class$postcode_invoice, print)
lapply(class$postcode_invoice, class)
lapply(class$postcode_invoice, standardise_postcodes)
source("helper.R")
#######################
# Load data
# known - training data
known = get_dataset("assignment_BADS_WS1617_known.csv")
# class - data to be classified
class = get_dataset("assignment_BADS_WS1617_class.csv")
#######################
# check plausability of data types
# lapply(known,class)
# summarise
lapply(known,summary)
lapply(class,summary)
setdiff(known$postcode_invoice,class$postcode_invoice)
setdiff(class$postcode_invoice,known$postcode_invoice)
# This is the main script that runs all the other modules
#######################
# Load modules
source("helper.R")
#######################
# Load data
# known - training data
known = get_dataset("assignment_BADS_WS1617_known.csv")
# class - data to be classified
class = get_dataset("assignment_BADS_WS1617_class.csv")
#######################
# check plausability of data types
# lapply(known,class)
# summarise
lapply(known,summary)
lapply(class,summary)
setdiff(class$postcode_invoice,known$postcode_invoice)
# This is the main script that runs all the other modules
#######################
# Load modules
source("helper.R")
#######################
# Load data
# known - training data
known = get_dataset("assignment_BADS_WS1617_known.csv")
# class - data to be classified
class = get_dataset("assignment_BADS_WS1617_class.csv")
#######################
# check plausability of data types
# lapply(known,class)
# summarise
lapply(known,summary)
lapply(class,summary)
setdiff(class$postcode_invoice,known$postcode_invoice)
setdiff(known$postcode_invoice,class$postcode_invoice)
# This is the main script that runs all the other modules
#######################
# Load modules
source("helper.R")
#######################
# Load data
# known - training data
known = get_dataset("assignment_BADS_WS1617_known.csv")
# class - data to be classified
class = get_dataset("assignment_BADS_WS1617_class.csv")
#######################
# check plausability of data types
# lapply(known,class)
# summarise
lapply(known,summary)
lapply(class,summary)
setdiff(known$postcode_invoice,class$postcode_invoice)
# This is the main script that runs all the other modules
#######################
# Load modules
source("helper.R")
#######################
# Load data
# known - training data
known = get_dataset("assignment_BADS_WS1617_known.csv")
# class - data to be classified
class = get_dataset("assignment_BADS_WS1617_class.csv")
#######################
# check plausability of data types
# lapply(known,class)
# summarise
lapply(known,summary)
lapply(class,summary)
levels(known$postcode_invoice)
labels(known$postcode_invoice)
# This is the main script that runs all the other modules
#######################
# Load modules
source("helper.R")
#######################
# Load data
# known - training data
known = get_dataset("assignment_BADS_WS1617_known.csv")
# class - data to be classified
class = get_dataset("assignment_BADS_WS1617_class.csv")
#######################
# check plausability of data types
# lapply(known,class)
# summarise
lapply(known,summary)
lapply(class,summary)
labels(known$postcode_invoice)
levels(known$postcode_invoice)
levels(class$postcode_invoice)
levels(known$postcode_invoice)
standardise_postcode(levels(known$postcode_invoice))
# This is the main script that runs all the other modules
#######################
# Load modules
source("helper.R")
#######################
# Load data
# known - training data
known = get_dataset("assignment_BADS_WS1617_known.csv")
# class - data to be classified
class = get_dataset("assignment_BADS_WS1617_class.csv")
#######################
# check plausability of data types
# lapply(known,class)
# summarise
lapply(known,summary)
lapply(class,summary)
levels(known$postcode_invoice)
standardise_postcode(levels(known$postcode_invoice))
lapply(levels(known$postcode_invoice),standardise_postcode)
# This is the main script that runs all the other modules
#######################
# Load modules
source("helper.R")
#######################
# Load data
# known - training data
known = get_dataset("assignment_BADS_WS1617_known.csv")
# class - data to be classified
class = get_dataset("assignment_BADS_WS1617_class.csv")
#######################
# check plausability of data types
# lapply(known,class)
# summarise
lapply(known,summary)
lapply(class,summary)
standardise_postcode(levels(known$postcode_invoice))
standardise_postcodes(levels(known$postcode_invoice))
test = 1
source("helper.R")
standardise_postcode(test)
source("helper.R")
standardise_postcode(test)
test = 99
standardise_postcode(test)
source("helper.R")
standardise_postcode(test)
source("helper.R")
standardise_postcode(test)
test = 1
standardise_postcode(test)
source("helper.R")
standardise_postcode(test)
test = 99
standardise_postcode(test)
# This is the main script that runs all the other modules
#######################
# Load modules
source("helper.R")
#######################
# Load data
# known - training data
known = get_dataset("assignment_BADS_WS1617_known.csv")
# class - data to be classified
class = get_dataset("assignment_BADS_WS1617_class.csv")
#######################
# check plausability of data types
# lapply(known,class)
# summarise
lapply(known,summary)
lapply(class,summary)
# This is the main script that runs all the other modules
#######################
# Load modules
source("helper.R")
#######################
# Load data
# known - training data
known = get_dataset("assignment_BADS_WS1617_known.csv")
# class - data to be classified
class = get_dataset("assignment_BADS_WS1617_class.csv")
#######################
# check plausability of data types
# lapply(known,class)
# summarise
lapply(known,summary)
lapply(class,summary)
# This is the main script that runs all the other modules
#######################
# Load modules
source("helper.R")
#######################
# Load data
# known - training data
known = get_dataset("assignment_BADS_WS1617_known.csv")
# class - data to be classified
class = get_dataset("assignment_BADS_WS1617_class.csv")
#######################
# check plausability of data types
# lapply(known,class)
# summarise
lapply(known,summary)
#lapply(class,summary)
test = 1
standardise_postcode(test)
test = 99
standardise_postcode(test)
test = 999
standardise_postcode(test)
test = NA
standardise_postcode(test)
source("helper.R")
source("helper.R")
standardise_postcode(test)
# This is the main script that runs all the other modules
#######################
# Load modules
source("helper.R")
#######################
# Load data
# known - training data
known = get_dataset("assignment_BADS_WS1617_known.csv")
# class - data to be classified
class = get_dataset("assignment_BADS_WS1617_class.csv")
#######################
# check plausability of data types
# lapply(known,class)
# summarise
lapply(known,summary)
#lapply(class,summary)
standardise_postcode(test)
test = 99
standardise_postcode(test)
levels(known$postcode_invoice)
known$postcode_invoice
# This is the main script that runs all the other modules
#######################
# Load modules
source("helper.R")
#######################
# Load data
# known - training data
known = get_dataset("assignment_BADS_WS1617_known.csv")
# class - data to be classified
class = get_dataset("assignment_BADS_WS1617_class.csv")
#######################
# check plausability of data types
# lapply(known,class)
# summarise
lapply(known,summary)
#lapply(class,summary)
levels(known$postcode_invoice)
known$postcode_invoice
setdiff(known$postcode_invoice,class$postcode_invoice)
setdiff(class$postcode_invoice,known$postcode_invoice)
# This is the main script that runs all the other modules
#######################
# Load modules
source("helper.R")
#######################
# Load data
# known - training data
known = get_dataset("assignment_BADS_WS1617_known.csv")
# class - data to be classified
class = get_dataset("assignment_BADS_WS1617_class.csv")
#######################
# check plausability of data types
# lapply(known,class)
# summarise
lapply(known,summary)
#lapply(class,summary)
known$postcode_invoice
setdiff(class$postcode_invoice,known$postcode_invoice)
setdiff(known$postcode_invoice,class$postcode_invoice)
known$postcode_invoice
class$postcode_invoice
class$postcode_invoice[nchar(postcode_invoice)<2]
class$postcode_invoice[nchar(class$postcode_invoice)<2]
class$postcode_invoice[nchar(class$postcode_invoice)=2]
class$postcode_invoice[nchar(class$postcode_invoice)==2]
class$postcode_invoice[nchar(class$postcode_invoice)!=2]
class(class$postcode_invoice)
class(known$postcode_invoice)
length(class$postcode_invoice)
# This is the main script that runs all the other modules
#######################
# Load modules
source("helper.R")
#######################
# Load data
# known - training data
known = get_dataset("assignment_BADS_WS1617_known.csv")
# class - data to be classified
class = get_dataset("assignment_BADS_WS1617_class.csv")
#######################
# check plausability of data types
# lapply(known,class)
# summarise
lapply(known,summary)
#lapply(class,summary)
length(class$postcode_invoice)
class(known$postcode_invoice)
class(known)
sapply(known,class)
sapply(class,class)
# This is the main script that runs all the other modules
#######################
# Load modules
source("helper.R")
#######################
# Load data
# known - training data
known = get_dataset("assignment_BADS_WS1617_known.csv")
# class - data to be classified
class = get_dataset("assignment_BADS_WS1617_class.csv")
#######################
# check plausability of data types
# lapply(known,class)
# summarise
lapply(known,summary)
#lapply(class,summary)
sapply(class,class)
sapply(known,class)
length(class$postcode_invoice)
setdiff(class$postcode_invoice,known$postcode_invoice)
setdiff(known$postcode_invoice,class$postcode_invoice)
NA in known$advertising_code
NA %in% known$advertising_code
NA %in% class$advertising_code
"" %in% class$advertising_code
"" %in% known$advertising_code
NA %in% class$postcode_delivery
NA %in% known$postcode_delivery
"" %in% known$postcode_delivery
"" %in% class$postcode_delivery
