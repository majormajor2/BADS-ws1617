get_dataset = function(name) {
data = read.csv(name, header=T,sep=";")
for(header in list(data$title,data$newsletter,data$coupon,data$giftwrapping,data$referrer,data$cost_shipping))
{
header = factor(header, labels=c("no,"yes"))
}
#data$YOB[data$YOB==99] = NA
#data$YOB_missing = factor(ifelse(is.na(data$YOB), 1, 0), labels=c("no","yes"))
# trade off between information carried in dummy variables and increase in dimensionality
#data$YOB[is.na(data$YOB)] = median(data$YOB, na.rm = TRUE)
return(data)
}
# name = "~/Assignment_BADS_WS1617/assignment_BADS_WS1617_known.csv"
get_dataset = function(name) {
data = read.csv(name, header=T,sep=";")
for(header in list(data$title,data$newsletter,data$coupon,data$giftwrapping,data$referrer,data$cost_shipping))
{
header = factor(header, labels=c("no,"yes"))
}
#data$YOB[data$YOB==99] = NA
#data$YOB_missing = factor(ifelse(is.na(data$YOB), 1, 0), labels=c("no","yes"))
# trade off between information carried in dummy variables and increase in dimensionality
#data$YOB[is.na(data$YOB)] = median(data$YOB, na.rm = TRUE)
return(data)
}
#get data
setwd("/Users/sfinkenwirth/Documents/MEMS/Lectures and Seminars/Business Analytics & Data Science/Assignment_BADS_WS1617/Input")
bads <- read.csv("assignment_BADS_WS1617_known.csv", header = TRUE, sep = ",")
summary(bads)
source('~/Documents/MEMS/Lectures and Seminars/Business Analytics & Data Science/Assignment_BADS_WS1617/Code/Preprocessing.R')
source('~/Documents/MEMS/Lectures and Seminars/Business Analytics & Data Science/Assignment_BADS_WS1617/Code/Preprocessing.R')
name = bads
summary(name)
get_dataset = function(name) {
data = read.csv(name, header=T,sep=",")
for(header in list(data$title,data$newsletter,data$coupon,data$giftwrapping,data$referrer,data$cost_shipping))
{
header = factor(header, labels=c("no","yes"))
}
#data$YOB[data$YOB==99] = NA
#data$YOB_missing = factor(ifelse(is.na(data$YOB), 1, 0), labels=c("no","yes"))
# trade off between information carried in dummy variables and increase in dimensionality
#data$YOB[is.na(data$YOB)] = median(data$YOB, na.rm = TRUE)
return(data)
}
View(name)
View(name)
summary(name)
stra(name$)
header
name = bads
get_dataset = function(name) {
data = read.csv(name, header=T,sep=",")
for(header in list(data$title,data$newsletter,data$coupon,data$giftwrapping,data$referrer,data$cost_shipping))
{
header = factor(header, labels=c("no","yes"))
}
#data$YOB[data$YOB==99] = NA
#data$YOB_missing = factor(ifelse(is.na(data$YOB), 1, 0), labels=c("no","yes"))
# trade off between information carried in dummy variables and increase in dimensionality
#data$YOB[is.na(data$YOB)] = median(data$YOB, na.rm = TRUE)
return(data)
}
header
str(name)
#get data
setwd("/Users/sfinkenwirth/Documents/MEMS/Lectures and Seminars/Business Analytics & Data Science/Assignment_BADS_WS1617/Input")
known <- read.csv("assignment_BADS_WS1617_known.csv", header = TRUE, sep = ",")
#get data
setwd("/Users/sfinkenwirth/Documents/MEMS/Lectures and Seminars/Business Analytics & Data Science/Assignment_BADS_WS1617/Input")
known <- read.csv("assignment_BADS_WS1617_known.csv", header = TRUE, sep = ",")
# load packages
if(!require("ggplot2")) install.packages("ggplot2"); library(ggplot2)
# fix plot resolutions
par(mar=c(1,1,1,1)) # this code avoids some errors related to screen resolution; feel free to ignore it
# structure of dataset
str(bads)
summary(bads)
rm(list = ls())
#get data
setwd("/Users/sfinkenwirth/Documents/MEMS/Lectures and Seminars/Business Analytics & Data Science/Assignment_BADS_WS1617/Input")
known <- read.csv("assignment_BADS_WS1617_known.csv", header = TRUE, sep = ",")
# load packages
if(!require("ggplot2")) install.packages("ggplot2"); library(ggplot2)
# fix plot resolutions
par(mar=c(1,1,1,1)) # this code avoids some errors related to screen resolution; feel free to ignore it
# structure of dataset
str(known)
summary(known)
# form_of_address - 13% missing
str(bads$form_of_address)
as.numeric(summary(bads$form_of_address)[1])
address_missing = sum(is.na(bads$form_of_address))/nrow(bads)
# stats
company <- as.numeric(summary(bads$form_of_address)[1])/nrow(bads)
mr <- as.numeric(summary(bads$form_of_address)[2])/nrow(bads)
mrs <- as.numeric(summary(bads$form_of_address)[3])/nrow(bads)
address_stats <- c(company, mr, mrs, address_missing)
pct <- round(address_stats/sum(address_stats)*100)
labels.address <- paste(c("company", "mr", "mrs", "address_missing"), pct, "%", sep = " ")
data.frame(address_stats, row.names = c("company", "mr", "mrs", "address_missing"))
str(known$form_of_address)
as.numeric(summary(known$form_of_address)[1])
summary(known$form_of_address)
company <- as.numeric(summary(known$form_of_address)[1])/nrow(known)
mr <- as.numeric(summary(known$form_of_address)[2])/nrow(known)
mrs <- as.numeric(summary(known$form_of_address)[3])/nrow(known)
address_stats <- c(company, mr, mrs, address_missing)
address_missing = sum(is.na(known$form_of_address))/nrow(known)
address_stats <- c(company, mr, mrs, address_missing)
pct <- round(address_stats/sum(address_stats)*100)
labels.address <- paste(c("company", "mr", "mrs", "address_missing"), pct, "%", sep = " ")
data.frame(address_stats, row.names = c("company", "mr", "mrs", "address_missing"))
pie(x = address_stats, labels = labels.address, main = "Form of address")
str(known$form_of_address)
head(str(known$form_of_address))
head(known$form_of_address)
as.numeric(summary(known$form_of_address)[1])
as.numeric(summary(known$form_of_address)[1])
as.numeric(summary(known$form_of_address)[1])/nrow(known)
address_missing = sum(is.na(known$form_of_address))/nrow(known)
address_missing
is.na(known$form_of_address)
summary(is.na(known$form_of_address))
sum(is.na(known$form_of_address))
print(past(sum(is.na(known$form_of_address), "values are missing in form_of_adress")
print(past(sum(is.na(known$form_of_address), "values are missing in form_of_adress"))
address_missing = sum(is.na(known$form_of_address))/nrow(known)
print(past(sum(is.na(known$form_of_address), "values are missing in form_of_adress")))
print(paste(sum(is.na(known$form_of_address), "values are missing in form_of_adress")))
sum(is.na(known$form_of_address)
sum(is.na(known$form_of_address))
sum(is.na(known$form_of_address))
typeof(sum(is.na(known$form_of_address)))
sum(is.na(known$form_of_address))
form_of_address_na = sum(is.na(known$form_of_address))/nrow(known)
print(form_of_address_na = sum(is.na(known$form_of_address))/nrow(known))
form_of_address_na
address_stats <- c(company, mr, mrs, address_missing)
pct <- round(address_stats/sum(address_stats)*100)
labels.address <- paste(c("company", "mr", "mrs", "address_missing"), pct, "%", sep = " ") # define labels
data.frame(address_stats, row.names = c("company", "mr", "mrs", "address_missing"))
data.frame(pct, row.names = c("company", "mr", "mrs", "address_missing"))
data.frame(address_stats, row.names = c("company", "mr", "mrs", "address_missing"))
pie(x = address_stats, labels = labels.address, main = "Form of address")
summary(data$goods_value)
hist(data$goods_value)#goods_value ranges from 1-5???
summary(data$item_count)
hist(data$item_count)#majority of people orders only 1 item
known$order_date <- as.Date(known$order_date)
class(known$order_date)
# order_date_ym <- strftime(order_date, "%Y/%m") save specific attributes of Date
# Distribution of order_date per month
hist(x = known$order_date, breaks = "months")
summary(known)
str(known$account_creation_date) # factor with 258 levels
summary(known$account_creation_date) # 3412 NAs
is.na(known$account_creation_date) # 3412 NAs
summary(is.na(known$account_creation_date)) # 3412 NAs
sum(is.na(known$account_creation_date)) # 3412 NAs
known$account_creation_date <- as.Date(known$account_creation_date)
hist(x = known$account_creation_date, breaks = "months")
hist(x = known$account_creation_date, breaks = "days")
if(!require("lubridate")) install.packages("lubridate"); library(lubridate)
?lubridate
typeof(known$account_creation_date)
# class(known$account_creation_date)
class(known$account_creation_date)
known <- read.csv("assignment_BADS_WS1617_known.csv", header = TRUE, sep = ",")
class(known$account_creation_date)
typeof(known$account_creation_date)
parse_date_time
parse_date_time(known)
typeof(known$account_creation_date)
str(known$account_creation_date)
head(known["title"])
head(known[,"title"])
known$account_creation_date <- as.Date(known$account_creation_date)
class(known$account_creation_date)
acc.creation_month = month(x= known$account_creation_date, label = FALSE)
head(acc.creation_month)
head(known$account_creation_date)
known$acc_creation_month = month(x= known$account_creation_date, label = FALSE)
head(known$acc_creation_month) # compare with original dates
head(known$acc_creation_month) # works
head(known$account_creation_date) # compare with original dates
known$acc_creation_year = year(x = known$account_creation_date))
known$acc_creation_year = year(x = known$account_creation_date)
head(known$acc_creation_year) # works
head(known$account_creation_date) # compare with original dates
summary(known)
known$acc_creation_year = quarter(x = known$acc_creation_year, with_year = TRUE)
known$acc_creation_year = quarter(x = known$account_creation_date, with_year = TRUE)
known$acc_creation_year = year(x = known$account_creation_date)
head(known$acc_creation_year) # works
head(known$account_creation_date) # compare with original dates
known$acc_creation_quarter = quarter(x = known$account_creation_date, with_year = TRUE)
head(known$acc_creation_quarter) # works
head(known$account_creation_date) # compare with original dates
week(x = know$account_creation_date, label = FALSE)
?week
week(x = know$account_creation_date)
week(x = known$account_creation_date)
known$account_creation_week = week(x = known$account_creation_date)
head(known$acc_creation_week) # works
rm(list = known$account_creation_week)
known$account_creation_week
drop(known$account_creation_week)
known$account_creation_week == NULL
known$account_creation_week
known$account_creation_week = NULL
known$account_creation_week
known$acc_creation_week = week(x = known$account_creation_date)
head(known$acc_creation_week) # works
head(known$account_creation_date) # compare with original dates
?weekdays()
weekdays(known[1:20,account_creation_date])
weekdays(known[1:20,"account_creation_date"])
weekdays(known[1:20,"account_creation_date"], abbreviate = TRUE)
weekdays(known[1:20,"account_creation_date"], abbreviate = TRUE)
weekdays(known[1:20,"account_creation_date"], abbreviate = TRUE) == "So" or "Mo"
weekdays(known[1:20,"account_creation_date"], abbreviate = TRUE) == "So" | "Mo"
weekdays(known[1:20,"account_creation_date"], abbreviate = TRUE) = "So" | "Mo"
weekdays(known[1:20,"account_creation_date"], abbreviate = TRUE) = "So" || "Mo"
weekdays(known[1:20,"account_creation_date"], abbreviate = TRUE) == "So" || "Mo"
known$account_creation_date[, weekdays(known[1:20,"account_creation_date"], abbreviate = TRUE) == "So" || "Mo"]
known$account_creation_date[, "weekdays(known[1:20,"account_creation_date"], abbreviate = TRUE) == "So" || "Mo""]
weekdays(known[1:20,"account_creation_date"], abbreviate = TRUE)
weekdays(known[1:20,"account_creation_date"], abbreviate = TRUE) == "So"
str(known$account_creation_date)
sum(as.na(known$account_creation_date))
sum(is.na(known$account_creation_date))
weekdays(known[1:20,"account_creation_date"], abbreviate = TRUE) == "So" OR "Mo""
weekdays(known[1:20,"account_creation_date"], abbreviate = TRUE) == "So" | "Mo"
weekdays(known[1:20,"account_creation_date"], abbreviate = TRUE)
weekdays(known[1:20,"account_creation_date"], abbreviate = TRUE)
weekdays1 = c('Mo', 'Di', 'Mi', 'Do', 'Fr')
known$wDay <- factor(weekdays(known$account_creation_date) %in% weekdays1), levels=c(FALSE, TRUE), labels=c('weekend', 'weekday') )
known$wDay <- factor(weekdays(known$account_creation_date) %in% weekdays1) levels=c(FALSE, TRUE), labels=c('weekend', 'weekday') )
known$wDay <- factor((weekdays(known$account_creation_date) %in% weekdays1), levels=c(FALSE, TRUE), labels=c('weekend', 'weekday') )
head(known$wDay)
weekdays(known$account_creation_date) %in% weekdays1
weekdays(known$account_creation_date)
weekdays(known$account_creation_date, abbreviate = TRUE)
weekdays(known$account_creation_date, abbreviate = TRUE) %in% weekdays1)
weekdays(known$account_creation_date, abbreviate = TRUE) %in% weekdays1
known$wDay <- factor((weekdays(known$account_creation_date, abbreviate = TRUE) %in% weekdays1), levels=c(FALSE, TRUE), labels=c('weekend', 'weekday') )
head(known$wDay)
known$wDay <- factor((weekdays(known$account_creation_date, abbreviate = TRUE) %in% weekdays1), levels=c(FALSE, TRUE), labels=c("weekend", "weekday") )
head(known$wDay)
known[,"acc_creation_quarter"|"acc_creation_month"]
known[,"acc_creation_quarter";"acc_creation_month"]
known[,c(acc_creation_quarter,acc_creation_month)]
known[,c("acc_creation_quarter","acc_creation_month")]
head(known[,c("acc_creation_quarter","acc_creation_month")])
known[,c("acc_creation_quarter","acc_creation_month","wDay")]
head(known[,c("acc_creation_quarter","acc_creation_month","wDay")])
lm(list=ls()
lm(list=ls())
lm(list=ls())
rm(list = ls())
source("helper.R")
known = get_dataset("assignment_BADS_WS1617_class.csv")
lapply(known,class)
lapply(known,summary)
getwd()
setwd("/Users/sfinkenwirth/Documents/MEMS/Lectures and Seminars/Business Analytics & Data Science/Assignment_BADS_WS1617/bads-ws1617-group27")
source("helper.R")
known = get_dataset("assignment_BADS_WS1617_class.csv")
lapply(known,class)
lapply(known,summary)
