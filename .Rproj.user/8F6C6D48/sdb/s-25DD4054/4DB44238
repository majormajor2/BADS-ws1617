{
    "collab_server" : "",
    "contents" : "\n# getting the dataset, creating a data.frame and \n# converting variables to correct data types\n# input: filename of csv-file\n# output: data frame\n\nget_dataset = function(name) {\n  \n  # read csv-file\n  data = read.csv(name, header=T,sep=\",\")\n  \n  \n  # drop data$points_redeemed because it has all zeros -> no informational value\n  data$points_redeemed = NULL\n\n  \n  # factorise ID\n  data$ID = factor(data$ID)\n  \n  # factorise postcodes\n  data$postcode_invoice = factor(data$postcode_invoice)\n  data$postcode_delivery = factor(data$postcode_delivery)\n  \n  # factorise website model\n  data$model = factor(data$model)\n  \n  # factorise all binary variables with labels \"no\" and \"yes\" where appropriate\n  for(header in c(\"title\",\"newsletter\",\"coupon\",\"giftwrapping\",\"referrer\",\"cost_shipping\"))\n      {\n      data[,header] = factor(data[,header],labels=c(\"no\",\"yes\"))\n  }\n  \n  # factorise binary variable data$delivery with appropriate labels\n  data$delivery = factor(data$delivery, labels=c(\"Door delivery\",\"Collection at post office\"))\n  \n  # convert date variables to data type Date\n  for(header in c(\"order_date\",\"account_creation_date\",\"deliverydate_estimated\",\"deliverydate_actual\"))\n  {\n    data[,header] = as.Date(data[,header])\n  }\n  \n\n  #data$YOB[data$YOB==99] = NA\n  #data$YOB_missing = factor(ifelse(is.na(data$YOB), 1, 0), labels=c(\"no\",\"yes\"))\n  # trade off between information carried in dummy variables and increase in dimensionality\n  #data$YOB[is.na(data$YOB)] = median(data$YOB, na.rm = TRUE)\n\n\n  return(data)\n}\n\n\n# treats the missing values in the data frame\n# input: data frame with missing values\n# output: data frame with treated missing values\nexterminate_missing_values = function(dataset) {\n  data = dataset\n  \n  # TO DO:\n  \n  return(data)\n}\n\n# standardise cardinal variables to range from 0 to 1 (e.g. item count)\n# input: data frame\n# output: data frame\nstandardise_cardinal_variables = function(dataset) {\n  data = dataset\n  \n  # TO DO:\n  \n  return(data)\n}",
    "created" : 1481904660025.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3964044653",
    "id" : "4DB44238",
    "lastKnownWriteTime" : 1481922126,
    "last_content_update" : 1481922126188,
    "path" : "~/bads-ws1617-group27/helper.R",
    "project_path" : "helper.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}